[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Proficient in Microsoft Office, R, and Python for data analysis. Also, experienced in managing and analyzing large datasets.\n\n\n\nProficient in managing virtual learning platforms, including Zoom, OBS-Studio, and YouTube streaming.\n\n\n\nEfficient in managing administrative tasks such as inventory management, account maintenance, and other activities for office functioning.\n\n\n\nKnowledge of Linux, Windows, and macOS, with expertise in troubleshooting, and software installation and updating.\n\n\n\nExperienced in coordinating and conducting field surveys."
  },
  {
    "objectID": "about.html#data-analysis",
    "href": "about.html#data-analysis",
    "title": "About Me",
    "section": "",
    "text": "Proficient in Microsoft Office, R, and Python for data analysis. Also, experienced in managing and analyzing large datasets."
  },
  {
    "objectID": "about.html#management-of-virtual-platforms",
    "href": "about.html#management-of-virtual-platforms",
    "title": "About Me",
    "section": "",
    "text": "Proficient in managing virtual learning platforms, including Zoom, OBS-Studio, and YouTube streaming."
  },
  {
    "objectID": "about.html#administrative-and-office-management",
    "href": "about.html#administrative-and-office-management",
    "title": "About Me",
    "section": "",
    "text": "Efficient in managing administrative tasks such as inventory management, account maintenance, and other activities for office functioning."
  },
  {
    "objectID": "about.html#operating-system-management",
    "href": "about.html#operating-system-management",
    "title": "About Me",
    "section": "",
    "text": "Knowledge of Linux, Windows, and macOS, with expertise in troubleshooting, and software installation and updating."
  },
  {
    "objectID": "about.html#survey-management-and-assistance",
    "href": "about.html#survey-management-and-assistance",
    "title": "About Me",
    "section": "",
    "text": "Experienced in coordinating and conducting field surveys."
  },
  {
    "objectID": "about.html#course-assistant",
    "href": "about.html#course-assistant",
    "title": "About Me",
    "section": "Course Assistant",
    "text": "Course Assistant\nIDEAs (International Development Economics Associates) – Advanced Certificate Programme on Research in Political Economy\n\nManagement of video and audio setup to facilitate a hybrid classroom environment for the IDEAs Certificate Programme lectures.\nParticipation and assistance in field surveys such as surveys of households in Madhya Pradesh (2022) and survey of textile workers in Panipat (2023).\nAdministrative responsibilities such as classroom management and accounts maintenance."
  },
  {
    "objectID": "about.html#research-assistant",
    "href": "about.html#research-assistant",
    "title": "About Me",
    "section": "Research Assistant",
    "text": "Research Assistant\nSociety for Social and Economic Research (SSER)\n\nCompile and analyze data from union budgets to identify expenditure trends and changes in budgetary allocations for various schemes.\nExtraction and analysis of data from PLFS (Periodic Labour Force Surveys).\nData scraping from secondary sources, such as Agmarknet’s food price data, FCI’s procurement data, consumer price index data, and fertilizer statistics.\nAnalyze and visualize compiled data using R for research projects.\nParticipation and assistance in field surveys such as the Survey of Rural Households in Haryana (2018), the Survey of Industrial Workers in Faridabad (2019), the Survey of Farmers during Farm Protests (2021), and the Survey of Farmers in Madhya Pradesh during the Fertiliser Crisis in 2021.\nData entry for various primary surveys conducted by SSER.\nBibliography management for multiple research projects."
  },
  {
    "objectID": "data_vizs.html",
    "href": "data_vizs.html",
    "title": "Data Visualizations",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n\n\n\n\n\n\n\n\nFoodgrain Stock\n\n\n\nNovember 1, 2025\n\n\n\n\n\n\n\n\n\n\n\nFuel Prices\n\n\n\nOctober 30, 2025\n\n\n\n\n\n\n\n\n\n\n\nPublic Procurement\n\n\n\nOctober 30, 2025\n\n\n\n\n\n\n\n\n\n\n\nTrade Statistics\n\n\n\nOctober 29, 2025\n\n\n\n\n\n\n\n\n\n\n\nAnnually Edible Oils Import by India\n\n\n\nOctober 28, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "data_vizs/edibleoil.html",
    "href": "data_vizs/edibleoil.html",
    "title": "Annually Edible Oils Import by India",
    "section": "",
    "text": "Code\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(ggthemes) ## For more themes\n\n## Custom theme for plots\nmy_theme &lt;- theme_bw(base_size = 16) +  ## Start with theme_bw and increase base size\n    theme(text = element_text(family = \"serif\", color = \"#333333\"), ## Set font family and color\n          plot.title = element_text(size = 20, face = \"bold\",\n                                    hjust = 0.5, margin = margin(10, 0, 10, 0)), ## Center and style title\n          axis.title = element_text(size = 18),\n          axis.text = element_text(size = 14),\n          legend.position = \"bottom\",\n          legend.title = element_blank(),  ## Remove legend title\n          panel.grid.major = element_line(color = \"#EEEEEE\"), ## Lighter grid lines\n          panel.border = element_blank(), ## Remove panel border\n          axis.line = element_line(color = \"#333333\"), ## Add axis lines\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n          strip.background = element_rect(fill = \"#F2F2F2\", color = NA) ## Style facet strips (if used)\n          )\n\n\n\n\nCode\nreadRDS(\"/home/pawan/edibleoils/palmoil_import.rds\")-&gt;palm\nreadRDS(\"/home/pawan/edibleoils/soyabean_import.rds\")-&gt;soyabean\nreadRDS(\"/home/pawan/edibleoils/sunflower_import.rds\")-&gt;sunflower\n\npaste0(\"Palm Oil\")-&gt;palm$Edibleoil\npaste0(\"Soyabean Oil\")-&gt;soyabean$Edibleoil\npaste0(\"Sunflower Oil\")-&gt;sunflower$Edibleoil\n\npaste0(as.numeric(substr(palm$Year,1,4)),\"-\",\n       as.numeric(substr(palm$Year,3,4))+1)-&gt;palm$Year\npaste0(as.numeric(substr(palm$LagYear,1,4)),\"-\",\n       as.numeric(substr(palm$LagYear,8,9)))-&gt;palm$LagYear\n\npaste0(as.numeric(substr(soyabean$Year,1,4)),\"-\",\n       as.numeric(substr(soyabean$Year,3,4))+1)-&gt;soyabean$Year\npaste0(as.numeric(substr(soyabean$LagYear,1,4)),\"-\",\n       as.numeric(substr(soyabean$LagYear,8,9)))-&gt;soyabean$LagYear\n\npaste0(as.numeric(substr(sunflower$Year,1,4)),\"-\",\n       as.numeric(substr(sunflower$Year,3,4))+1)-&gt;sunflower$Year\npaste0(as.numeric(substr(sunflower$LagYear,1,4)),\"-\",\n       as.numeric(substr(sunflower$LagYear,8,9)))-&gt;sunflower$LagYear\n\nrbind(palm,soyabean,sunflower)-&gt;edibleoil\n\nedibleoil[Country==\"Total\",.(Share=(round(ImportYear*100/sum(ImportYear))),\n                             Edibleoil,ImportYear),.(Year)]-&gt;oil\n\n\n\n\nCode\nggplot(oil, aes(x = Year, y = ImportYear, fill = Edibleoil)) +\n    geom_bar(stat = \"identity\", position = \"stack\") +\n    geom_text(aes(x = Year, y = ImportYear,\n                   label = ifelse(Share&lt;5, \"\", paste0(Share, \"%\"))),\n               position = position_stack(vjust = 0.5), size = 5, color = \"black\") +\n    scale_fill_brewer(palette=\"Set2\")+\n    my_theme +\n    scale_y_continuous(labels = scales::comma) +\n    labs(y = \"Values in US $ Million\") +\n    ggtitle(\"Edible Oil Import\")-&gt;p5\np5\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"annual-edibleoil-import.png\", width = 12, height = 8)"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n    \n  \n\n\n\n\n\n\n\n\nCombining plots in ggplot2\n\n\n\n\n\n\n\n\n\n\nThe Advantages of R for Statistical Analysis\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/why-R.html",
    "href": "blog/why-R.html",
    "title": "The Advantages of R for Statistical Analysis",
    "section": "",
    "text": "R has emerged as one of the most powerful and versatile programming languages in data analysis and statistical computing. It’s Developed by statisticians for statisticians, R is specifically designed to handle complex data analysis tasks, making it an ideal choice for researchers, data scientists, and analysts across various fields. This essay explores the numerous advantages of R for statistical analysis, including its extensive libraries, community support, data visualization capabilities, and flexibility.\n\nComprehensive Statistical Libraries\nOne of the most significant advantages of R is its collection of packages and libraries tailored for statistical analysis. The Comprehensive R Archive Network (CRAN) hosts thousands of packages that cover a wide range of statistical techniques, from basic descriptive statistics to advanced machine learning algorithms. For instance, packages like data.table, dplyr and tidyr facilitate data manipulation and cleaning, while ggplot2 provides powerful tools for data visualization. More specialized packages, such as base-R for mixed and various statistical in-builts functions and survival for survival analysis, enable users to conduct sophisticated analyses with relative ease. The availability of these packages means that R can be used for virtually any statistical task, making it a one-stop solution for data analysis.\n\n\nStrong Community Support\nR boasts a vibrant and active community of users and developers who contribute to its growth and evolution. This community support is invaluable for both novice and experienced users. Online forums, such as Stack Overflow and R-bloggers, statictiaclglobe provide platforms for users to ask questions, share insights, and collaborate on projects. Additionally, the R community regularly organizes conferences, workshops, and meetups, fostering an environment of continuous learning and knowledge sharing. The collaborative nature of the R community also means that users can access a wealth of resources, including tutorials, documentation, and example datasets. This support network is particularly beneficial for those new to statistical analysis, as it allows them to learn from others’ experiences and quickly overcome challenges.\n\n\nData Visualization Capabilities\nEffective data visualization is a crucial aspect of statistical analysis, as it helps to communicate findings clearly and intuitively. R in this area, offering a range of powerful visualization tools that enable users to create high-quality graphics. The ggplot2 package, in particular, has gained widespread acclaim for its ability to produce complex and aesthetically pleasing visualizations with minimal code. With ggplot2, users can create a variety of plots, including scatter plots, line graphs, histograms, and box plots, all while maintaining control over the aesthetics and layout. The grammar of the graphics approach used by ggplot2 allows for layering of visual elements, making it easy to add annotations, customize scales, and combine multiple plots into a single visualization. This flexibility ensures that users can effectively convey their analytical results, making R an excellent choice for presenting data-driven insights.\n\n\nFlexibility and Extensibility\nR is an open-source language, which means that users have the freedom to modify and extend its capabilities. This flexibility is particularly advantageous for researchers and analysts who may need to implement custom statistical methods or algorithms. Users can write their functions or modify existing ones to suit their specific needs, allowing for a high degree of customization in their analyses. Moreover, R can easily integrate with other programming languages, such as Python and C++, enabling users to leverage the strengths of multiple languages in their projects. This interoperability allows for the incorporation of R into larger data processing pipelines, making it a versatile tool in a data scientist’s toolkit.\n\n\nReproducibility and Documentation\nReproducibility is a cornerstone of scientific research, and R provides several tools to ensure that analyses can be easily replicated. The use of R Markdown allows users to create dynamic documents that combine code, output, and narrative text in a single file. This feature not only enhances the clarity of the analysis but also facilitates the sharing of results with others. R Markdown documents can be rendered in various formats, including HTML, PDF, and Word, making it easy to present findings professionally. Additionally, the integration of code and documentation ensures that analyses are transparent and reproducible, which is essential for building trust in research findings.\n\n\nStatistical Modeling and Machine Learning\nR is particularly well-suited for statistical modeling and machine learning applications. The language provides a rich set of tools for fitting various statistical models, including linear regression, generalized linear models, and time series analysis. The caret package, for example, offers a unified interface for training and evaluating machine learning models, making it easier for users to experiment with different algorithms and tuning parameters. Furthermore, R’s ability to handle large datasets and perform complex calculations efficiently makes it a strong contender for big data applications. With the advent of packages like data.table and dplyr, R can process large volumes of data quickly, allowing analysts to derive insights from big data without sacrificing performance.\n\n\nIntegration with Other Tools\nR’s versatility extends to its ability to integrate seamlessly with various data sources and tools. It can connect to databases such as MySQL, PostgreSQL, and SQLite, enabling users to perform analyses directly on data stored in relational databases. Additionally, R can read and write data in multiple formats, including CSV, Excel, and JSON, making it easy to import and export data as needed. Moreover, R can be integrated with web applications and dashboards through packages like Shiny, which allows users to create interactive web applications for data visualization and analysis. This capability is particularly useful for sharing insights with stakeholders who may not have a technical background, as it enables them to explore data and results intuitively.\n\n\nEducational Resources and Learning Curve\nFor those new to statistical analysis, R offers a wealth of educational resources that can help users get up to speed quickly. Numerous online courses, tutorials, and textbooks are available, catering to different learning styles and levels of expertise. The availability of these resources makes it easier for individuals to learn R and apply it to their statistical analyses. While R has a reputation for having a steeper learning curve compared to some other programming languages, its syntax is logical and consistent, which can facilitate the learning process. Once users become familiar with the basics, they often find that R’s capabilities and flexibility far outweigh the initial challenges.\n\n\nIndustry Adoption and Job Market Demand\nR has gained significant traction in various industries, particularly in fields such as finance, healthcare, and academia. Many organizations recognize the value of R for data analysis and statistical modeling, leading to an increasing demand for professionals skilled in R. This trend is reflected in job postings that frequently list R as a required or preferred skill for data analyst and data scientist positions. As more companies adopt data-driven decision-making practices, proficiency in R can enhance career prospects and open doors to new opportunities. The language’s strong reputation in the statistical community further solidifies its position as a valuable asset for anyone looking to advance their career in data analysis.\n\n\nConclusion\nIn conclusion, R stands out as a powerful and flexible tool for statistical analysis, offering a wide range of advantages that cater to the needs of researchers, analysts, and data scientists. Its comprehensive libraries, strong community support, exceptional data visualization capabilities, and flexibility make it an ideal choice for tackling complex data analysis tasks. Furthermore, R’s emphasis on reproducibility and documentation ensures that analyses are transparent and trustworthy. As the demand for data analysis continues to grow across various industries, R’s relevance and utility are likely to persist. By leveraging R’s capabilities, users can unlock valuable insights from their data, ultimately driving informed decision-making and contributing to advancements in their respective fields. Whether you are a seasoned statistician or a newcomer to data analysis, R provides the tools and resources necessary to succeed in the ever-evolving landscape of data science."
  },
  {
    "objectID": "blog/combine-plot.html",
    "href": "blog/combine-plot.html",
    "title": "Combining plots in ggplot2",
    "section": "",
    "text": "The ggplot2 package doesn’t providing function to arrange multiples plots in a single figure, but there are some packages, that allow combine multiples plots into a single figure with custom layouts, width, height, such as cowplot, gridExtra, patchwork"
  },
  {
    "objectID": "blog/combine-plot.html#combining-ggplot2-plots",
    "href": "blog/combine-plot.html#combining-ggplot2-plots",
    "title": "Combining plots in ggplot2",
    "section": "Combining ggplot2 plots",
    "text": "Combining ggplot2 plots\npatchwork is designed to combine ggplot2 plots into the same figure easily with using the + operator to combine the charts.\n\n\nCode\n# install.packages(\"patchwork\")\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Combine the plots\np1 + p2"
  },
  {
    "objectID": "blog/combine-plot.html#controlling-the-layout",
    "href": "blog/combine-plot.html#controlling-the-layout",
    "title": "Combining plots in ggplot2",
    "section": "Controlling the layout",
    "text": "Controlling the layout\nIf you want to customize the number of rows or columns of the figure you can use the plot_layout function. Also you can also specify the widths and heights of the plots with widths and heights arguments.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Combine the plots\np1 + p2 + p3 + p4 +\n  plot_layout(ncol = 3) \n\n\nThe most interesting functionality of the plot_layout function is that you can create a custom layout design as shown in the example below, where 1, 2, 3 and 4 represents the locations for p1,p2, p3 and p4, respectively, and # represents an empty space. Recall that you can use numbers but also letters to represent the plot locations.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Combine the plots with a custom layout\np1 + p2 + p3 + p4 +\n  plot_layout(design =\"111\n                       2#3\n                       443\") \n\n\n\nThe wrap_plots function\nSometimes you can’t use the + operator programatically, so if you don’t know the number of plots beforehand you can use the wrap_plots function and pass a list of plots to it. This function also allows specifying the number of rows and columns, the sizes and the custom layouts.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Combine the plots\nwrap_plots(p1, p2, p3, p4, \n           ncol = 2, nrow = 2,\n           widths = c(1, 0.5), heights = c(0.5, 1)) \n\n\n\n\nAdding spacers\nWhen creating a custom layout you can use # to add spaces, as shown in one of the previous examples, but if you are using + there is also a function named plot_spacer to add spaces or gaps between plots.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Plots with spaces\np1 + plot_spacer() + plot_spacer() + p3"
  },
  {
    "objectID": "blog/combine-plot.html#operators",
    "href": "blog/combine-plot.html#operators",
    "title": "Combining plots in ggplot2",
    "section": "Operators",
    "text": "Operators\nThe patchwork package also provides two operators to place plots beside each other or to stack them.\n\nArranging ggplot2 plots in rows (beside each other)\nThe | operator places plots in a row. This operator is similar to + when you have two plots but | will place all plots in a single row while + will try to create a square layout if possible.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Combine the plots in rows\np1 | p2\n\n\n\n\nArranging ggplot2 plots in columns (stacked)\nThe / operator stacks the ggplot2 plots into columns without the need of using the plot_layout function and specifying ncol = 1.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Combine the plots as column\np1 / p2\n\n\nYou can create complex layouts. The | and / operators can be use to create complex layouts combining plots. In the following example we are creating a layout with two plots at the top and one wider at the bottom.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Two plots on top and one at the bottom\n(p1 | p2) / p3 \n\n\nThe following example is similar to the previous, but with one plot at the left and two at the right.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# One plot at the left and two at the right\np1 | (p2 / p3)"
  },
  {
    "objectID": "blog/combine-plot.html#titles-and-labels",
    "href": "blog/combine-plot.html#titles-and-labels",
    "title": "Combining plots in ggplot2",
    "section": "Titles and labels",
    "text": "Titles and labels\n\nTitle for all the plots\nYou can add a title, subtitle and captions to all plots with the plot_annotation function.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Title for the combined plots\np1 + ((p2 | p3) / p4) + \nplot_annotation(title = \"Title\",\n                subtitle = \"Subtitle\",\n                caption = \"Caption\") \n\n\nThe plot_annotation function can also be used to label each plot individually with the tags_level argument. Possible options are “1” for numbers, “a” for lowercase letters, “A” for uppercase letters, “i” for lowercase Roman numerals, “I” for uppercase Roman numerals or a vector with your own tags.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Labels for each plot\np1 + p2 + plot_annotation(tag_levels = \"A\") \n\n\nThe labels can be customized with the tag_prefix, tag_suffix and tag_sep arguments.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Labels for each plot\np1 + p2 + plot_annotation(tag_levels = \"A\", tag_prefix = \"Plot \")"
  },
  {
    "objectID": "blog/combine-plot.html#adding-more-layers",
    "href": "blog/combine-plot.html#adding-more-layers",
    "title": "Combining plots in ggplot2",
    "section": "Adding more layers",
    "text": "Adding more layers\nThe figures created with patchwork behave the same way as a ggplot2 object, so you can add new layers as with normal plots, but the layer will be applied to the last added plot.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Add a new layer\np2 + p1 +\n  geom_jitter(color = \"blue\")\n\n# Equivalent to:\np &lt;- p2 + p1\np + geom_jitter(color = \"blue\") \n\n\nIf you want to customize other than the last plot added you can add the new layer to it or save the patchwork, access the desired element and customize it, as shown in the following example.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Add a new layer to the first plot\np2 + theme_bw() + p1\n\n# Equivalent to:\np &lt;- p2 + p1\np[[1]] &lt;- p[[1]] + theme_bw()\np\n\n\n\nModifying all plots at the same time\npatchwork also provides the & operator to modify all the plots at the same time to set the same theme for all plots at the same time.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# Change the theme for all plots\np1 + p2 + p3 + p4 & theme_classic()"
  },
  {
    "objectID": "blog/combine-plot.html#adding-tables-and-text",
    "href": "blog/combine-plot.html#adding-tables-and-text",
    "title": "Combining plots in ggplot2",
    "section": "Adding tables and text",
    "text": "Adding tables and text\nWhen adding base R plots and ggplot2 plots patchwork won’t be able to align the plots, so you will need to customize the margins for one of the plots and try to fine tune the values until you reach a good alignment.\nMaking use of the tableGrob function from the gridExtra package you can add a table to a layout created with patchwork.\n\n\nCode\n# install.packages(\"gridExtra\")\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(gridExtra)\n\ntab &lt;- t(round(quantile(df$mpg), 2))\n\n# ggplot2 with table\np1 / tableGrob(tab) \n\n\nYou can also use the textGrob function from gridExtra to add a text to the layout, but note that if you want the text to be the first element you will need to use the wrap_elements function.\n\n\nCode\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(grid)\n\n# ggplot2 with text\np1 + textGrob(\"Text at the right\")\n\n# To put the text first use:\nwrap_elements(textGrob(\"Text at the left\")) + p1"
  },
  {
    "objectID": "blog/combine-plot.html#aligning-the-plots",
    "href": "blog/combine-plot.html#aligning-the-plots",
    "title": "Combining plots in ggplot2",
    "section": "Aligning the plots",
    "text": "Aligning the plots\nThe plot_grid function also customize the number of rows and columns of plots with the nrow and ncol arguments.\n\n\nCode\nlibrary(ggplot2)\nlibrary(cowplot)\n\nplot_grid(p1, p2, p3, ncol = 1)"
  },
  {
    "objectID": "blog/combine-plot.html#adding-labels-to-each-plot",
    "href": "blog/combine-plot.html#adding-labels-to-each-plot",
    "title": "Combining plots in ggplot2",
    "section": "Adding labels to each plot",
    "text": "Adding labels to each plot\nIf you want to label each plot individually you can make use the labels argument of the function, where you can specify a vector of labels or use the “A” or “a” keywords for automatic labels in uppercase or lowercase, respectively. The function also provides several arguments to customize the style of the texts.\n\n\nCode\nlibrary(ggplot2)\nlibrary(cowplot)\n\nplot_grid(p1, p2, p4,\n          labels = c(\"A\", \"b\", 1),\n          label_fontfamily = \"serif\",\n          label_fontface = \"bold\",\n          label_colour = \"dodgerblue2\")"
  },
  {
    "objectID": "blog/combine-plot.html#mixing-plots-with-cowplot",
    "href": "blog/combine-plot.html#mixing-plots-with-cowplot",
    "title": "Combining plots in ggplot2",
    "section": "Mixing plots with cowplot",
    "text": "Mixing plots with cowplot\nWith cowplot you can also create more complex layouts combining plot_grid functions, as shown in the example below, where we are creating a layout with two plots at the bottom and one at the top.\n\n\nCode\nlibrary(ggplot2)\nlibrary(cowplot)\n\n# Grid layout with cowplot\nplot_grid(p3, plot_grid(p1, p2), ncol = 1)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Portfolio",
    "section": "",
    "text": "I am an experienced professional with a strong background in research and data analysis, having worked as a Course Assistant for the IDEAs Advanced Certificate Programme on Research in Political Economy from 2022 to 2024. During this programme, I worked as a Survey Field Assistant, Technical Assistant, and Office Assistant. As a Survey Field Assistant, I provided assistance based on my previous field experience and helped conduct a good survey across various regions in India. As a Technical Assistant, I managed the classroom setup for both in-person (Indian) and online (international) students and helped to provide better visual and audible lectures to international students through Zoom and other related software also for the in-person students. As an Office Assistant, I managed the office and classroom-related things. Like welcoming the resource person, managing stationery, managing accounts, and managing consumable things. As a Course Assistant, I am very familiar with Zoom (online meeting software), OBS-Studio (Broadcasting Software), Videography, Audiography, etc. During my role as a Course Assistant for the IDEAs Advanced Certificate Programme on Research in Political Economy, I enjoyed assisting. Especially during the lectures taken by great economists from all over the world. Prior to this role, I worked as a Research Assistant at the Society for Social and Economic Research (SSER), New Delhi (India), from 2018 to 2022 where I compiled and analyzed data from union budgets, Periodic Labour Force Surveys, and scraping data from various secondary sources , and participated in multiple field surveys. As a Research Assistant, I worked as a Survey Field Investigator, Data Manager, and Data Analyst. I have experience conducting door-to-door surveys and collecting and verifying data, including paper-based and electronic surveys. Good communication skills to explain survey procedures to participants and resolve any issues that arise during data collection. Ability to organize and manage survey materials and data collection processes. I have experience using statistical software to analyze data, identify trends, and create reports. I am also familiar with R (Statistical Computing Software), and along with this I am also familiar with fundamental data analysis with Python, and knowledge of Linux OS and am comfortable working with large datasets. As a Research Assistant, I especially enjoy working with the research team to analyze the data and data collection methods. During my role as a Research Assistant at the Society for Social and Economic Research, I worked with a team of researchers to develop a process for collecting and analyzing data. I possess strong skills in data analysis using Microsoft Office, R, and Python, and I am proficient in managing virtual learning platforms such as Zoom and OBS-Studio. Additionally, I have experience in administrative tasks, including inventory management and account maintenance, and I am knowledgeable in operating systems like Linux, Windows, and macOS. My experience in coordinating and conducting field surveys further enhances my ability to contribute effectively to research initiatives."
  },
  {
    "objectID": "data_vizs/fuelprice.html",
    "href": "data_vizs/fuelprice.html",
    "title": "Fuel Prices",
    "section": "",
    "text": "Load the necessary packages\nCode\nlibrary(data.table)           ## Raed data table\nlibrary(ggplot2)              ## Graphical represantation\nlibrary(readxl)\nlibrary(gridExtra)\nlibrary(stringr)              ## Work with string\nlibrary(lubridate)            ## date\nlibrary(scales)               ## Nice Scales for ggplot2\nlibrary(fontawesome)          ## Icons display in ggplot2\nlibrary(ggtext)               ## Markdown text support for ggplot2\nlibrary(showtext)             ## Display fonts in ggplot2\nlibrary(colorspace)           ## Lighten and Darken colours\nlibrary(seecolor)             ## To print and view colours\nlibrary(patchwork)            ## Combining plots\nCostum the plot theme\nCode\nmy_theme &lt;- theme_bw(base_size = 16) +  ## Start with theme_bw and increase base size\n    theme(text = element_text(family = \"serif\", color = \"#333333\"), ## Set font family and color\n          plot.title = element_text(size = 20, face = \"bold\",\n                                    hjust = 0.5, margin = margin(10, 0,\n                                                                 10, 0)), ## Center and style title\n          axis.title = element_text(size = 18),\n          axis.text = element_text(size = 14),\n          legend.position = \"bottom\",\n          legend.title = element_blank(),  ## Remove legend title\n          panel.grid.major = element_line(color = \"#EEEEEE\"), ## Lighter grid lines\n          panel.border = element_blank(), ## Remove panel border\n          axis.line = element_line(color = \"#333333\"), ## Add axis lines\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n          strip.background = element_rect(fill = \"#F2F2F2\",\n                                          color = NA) ## Style facet strips (if used)\n          )"
  },
  {
    "objectID": "data_vizs/trade.html",
    "href": "data_vizs/trade.html",
    "title": "Trade Statistics",
    "section": "",
    "text": "Code\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(readxl)\nlibrary(viridis)\nlibrary(hrbrthemes)\n\nreadRDS(\"/home/pawan/trade/totaltrade/total_exportsusd.rds\")-&gt;usd\nreadRDS(\"/home/pawan/trade/totaltrade/total_exportsqty.rds\")-&gt;qty\nreadRDS(\"/home/pawan/trade/totaltrade/total_importsusd.rds\")-&gt;musd\nreadRDS(\"/home/pawan/trade/totaltrade/total_importsqty.rds\")-&gt;mqty\nas.data.table(read_excel(\"/home/pawan/trade/totaltrade/two-digit.xlsx\"))-&gt;twodigit\n\nmy_theme &lt;- theme_bw(base_size = 16) +  ## Start with theme_bw and increase base size\n    theme(text = element_text(family = \"serif\", color = \"#333333\"), ## Set font family and color\n          plot.title = element_text(size = 20, face = \"bold\",\n                                    hjust = 0.5, margin = margin(10, 0, 10, 0)), ## Center and style title\n          axis.title = element_text(size = 18),\n          axis.text = element_text(size = 14),\n          legend.position = \"bottom\",\n          legend.title = element_blank(),  ## Remove legend title\n          panel.grid.major = element_line(color = \"#EEEEEE\"), ## Lighter grid lines\n          panel.border = element_blank(), ## Remove panel border\n          axis.line = element_line(color = \"#333333\"), ## Add axis lines\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n          strip.background = element_rect(fill = \"#F2F2F2\", color = NA) ## Style facet strips (if used)\n          )\n\n\n\n\nCode\n## Export Data Cleaning\nusd[,HSCode4 := substr(HSCode, 1, 4)]\nusd[,HSCode6 := substr(HSCode, 1, 6)]\nusd[,HSCode2 := substr(HSCode, 1, 2)]\nqty[,HSCode2 := substr(HSCode, 1, 2)]\nqty[,HSCode4 := substr(HSCode, 1, 4)]\nqty[,HSCode6 := substr(HSCode, 1, 6)]\n\nas.numeric(twodigit$HSCode2)-&gt;twodigit$HSCode2\nas.numeric(qty$HSCode2)-&gt;qty$HSCode2\n\nmerge(qty,twodigit,by=c(\"HSCode2\"),all.x=TRUE)-&gt;qty\n\nas.numeric(gsub(\",\", \"\", qty$Export))-&gt;qty$Export\nifelse(is.na(qty$Export), 0, qty$Export)-&gt;qty$Export\n\nas.numeric(gsub(\",\", \"\", usd$Export))-&gt;usd$Export\nifelse(is.na(usd$Export), 0, usd$Export)-&gt;usd$Export\n\nqty[,.(Export_Qty = sum(Export)),.(Year)]-&gt;exportqty\nusd[,.(Export_USD = sum(Export)),.(Year)]-&gt;exportusd\n\nqty[,.(Qty = sum(Export)),.(Year, HSCode2)]-&gt;hscode2\nhscode2[,.(Qty = sum(Qty)),.(HSCode2)]-&gt;a\na[, Share := round(Qty*100/(sum(a$Qty)),2)][order(Share)]\n\n\n    HSCode2          Qty Share\n      &lt;num&gt;        &lt;num&gt; &lt;num&gt;\n 1:       1     57386.01  0.00\n 2:      43      5854.14  0.00\n 3:      45     18059.74  0.00\n 4:      46    172331.36  0.00\n 5:      65    106770.22  0.00\n 6:      66     21892.15  0.00\n 7:      67     83606.20  0.00\n 8:      80    158712.90  0.00\n 9:      81     99503.36  0.00\n10:      88    151253.43  0.00\n11:      89       272.58  0.00\n12:      92    141410.24  0.00\n13:      93     96216.58  0.00\n14:      99         0.00  0.00\n15:      18    408822.89  0.01\n16:      37    384881.26  0.01\n17:      47    198465.10  0.01\n18:      50    570319.77  0.01\n19:      51    419656.74  0.01\n20:      75    214353.15  0.01\n21:      86    202509.95  0.01\n22:      91    343247.84  0.01\n23:      98    300749.51  0.01\n24:       6    685362.74  0.02\n25:       5   1046260.29  0.03\n26:      36   1017258.02  0.03\n27:      41   1130457.78  0.03\n28:      14   1593237.80  0.04\n29:      16   1349979.59  0.04\n30:      58   1463885.18  0.04\n31:      60   1423811.29  0.04\n32:      35   1997244.81  0.05\n33:      97   1843448.56  0.05\n34:      44   2389352.56  0.06\n35:      78   2328337.80  0.06\n36:      56   2523293.29  0.07\n37:      94   3142096.61  0.08\n38:      83   3589717.35  0.09\n39:      21   3874862.38  0.10\n40:      59   4286776.32  0.11\n41:      22   4466206.17  0.12\n42:      31   4517466.78  0.12\n43:      33   4453885.91  0.12\n44:      57   4525781.90  0.12\n45:      64   4388485.46  0.12\n46:      79   4518806.71  0.12\n47:      24   5692707.51  0.15\n48:      19   6066888.36  0.16\n49:      34   6058425.85  0.16\n50:      95   6831130.69  0.18\n51:      69   7388098.29  0.19\n52:      74   7445222.51  0.20\n53:      82   8533886.81  0.22\n54:      13   8833219.84  0.23\n55:      42   8869994.13  0.23\n56:      70   8710743.58  0.23\n57:      30   9202345.03  0.24\n58:      20   9410197.68  0.25\n59:      49  12268144.88  0.32\n60:      11  13811909.37  0.36\n61:      32  13828177.60  0.36\n62:      15  15555901.75  0.41\n63:       4  17582034.85  0.46\n64:      53  18942390.17  0.50\n65:       3  21869681.60  0.57\n66:      87  21924832.97  0.57\n67:       8  22260569.64  0.58\n68:      55  22166164.28  0.58\n69:       2  22383882.17  0.59\n70:      84  23221827.79  0.61\n71:      40  24917098.01  0.65\n72:      38  25144722.14  0.66\n73:      12  25557876.07  0.67\n74:      63  27160873.41  0.71\n75:      48  28024570.74  0.73\n76:      76  28986020.42  0.76\n77:      71  29500489.72  0.77\n78:       9  29619992.49  0.78\n79:      62  32160782.14  0.84\n80:      54  32763337.09  0.86\n81:      61  46094554.16  1.21\n82:      68  47308999.08  1.24\n83:       7  60446992.73  1.58\n84:      90  62888329.34  1.65\n85:      39  66282101.26  1.74\n86:      28  69128102.86  1.81\n87:      73  74871272.42  1.96\n88:      52  82459600.99  2.16\n89:      29  91920137.68  2.41\n90:      17  96911207.17  2.54\n91:      85  97459997.91  2.55\n92:      96 124708411.45  3.27\n93:      23 127625217.05  3.34\n94:      72 247501238.48  6.49\n95:      10 328288525.47  8.60\n96:      26 356321890.63  9.34\n97:      27 495448743.58 12.98\n98:      25 670751324.83 17.58\n    HSCode2          Qty Share\n\n\nCode\n## Import Data Cleaning\nmusd[,HSCode4 := substr(HSCode, 1, 4)]\nmusd[,HSCode6 := substr(HSCode, 1, 6)]\nmusd[,HSCode2 := substr(HSCode, 1, 2)]\nmqty[,HSCode2 := substr(HSCode, 1, 2)]\nmqty[,HSCode4 := substr(HSCode, 1, 4)]\nmqty[,HSCode6 := substr(HSCode, 1, 6)]\n\nas.numeric(gsub(\",\", \"\", mqty$Import))-&gt;mqty$Import\nifelse(is.na(mqty$Import), 0, mqty$Import)-&gt;mqty$Import\n\nas.numeric(gsub(\",\", \"\", musd$Import))-&gt;musd$Import\nifelse(is.na(musd$Import), 0, musd$Import)-&gt;musd$Import\n\nmqty[,.(Import_Qty = sum(Import)),.(Year)]-&gt;importqty\nmusd[,.(Import_USD = sum(Import)),.(Year)]-&gt;importusd\n\nmqty[,.(Qty = sum(Import)),.(Year, HSCode2)]-&gt;hscode21\nhscode21[,.(Qty = sum(Qty)),.(HSCode2)]-&gt;b\nb[, Share := round(Qty*100/(sum(b$Qty)),2)][order(Share)]\n\n\n    HSCode2          Qty Share\n     &lt;char&gt;        &lt;num&gt; &lt;num&gt;\n 1:      01 3.584730e+03  0.00\n 2:      02 1.033574e+04  0.00\n 3:      04 5.056488e+05  0.00\n 4:      05 1.440119e+05  0.00\n 5:      06 1.281618e+05  0.00\n 6:      16 2.182949e+04  0.00\n 7:      24 1.240792e+05  0.00\n 8:      30 2.869202e+05  0.00\n 9:      36 1.150939e+04  0.00\n10:      43 5.144310e+04  0.00\n11:      45 6.401317e+04  0.00\n12:      46 2.777328e+04  0.00\n13:      57 3.751304e+05  0.00\n14:      65 1.078908e+05  0.00\n15:      67 1.324753e+05  0.00\n16:      80 2.260796e+05  0.00\n17:      88 6.922053e+04  0.00\n18:      89 7.684720e+03  0.00\n19:      92 1.778048e+05  0.00\n20:      93 2.967135e+05  0.00\n21:      97 6.913320e+03  0.00\n22:      99 0.000000e+00  0.00\n23:      03 6.368178e+05  0.01\n24:      11 1.445115e+06  0.01\n25:      13 1.463007e+06  0.01\n26:      14 1.085953e+06  0.01\n27:      18 1.292217e+06  0.01\n28:      19 9.736307e+05  0.01\n29:      20 1.041778e+06  0.01\n30:      21 1.203420e+06  0.01\n31:      49 1.254153e+06  0.01\n32:      50 7.604266e+05  0.01\n33:      58 9.811175e+05  0.01\n34:      66 5.429846e+05  0.01\n35:      75 1.052377e+06  0.01\n36:      81 1.321740e+06  0.01\n37:      86 8.840297e+05  0.01\n38:      33 1.785591e+06  0.02\n39:      35 2.065950e+06  0.02\n40:      37 2.472297e+06  0.02\n41:      41 2.037341e+06  0.02\n42:      42 2.640793e+06  0.02\n43:      51 2.464337e+06  0.02\n44:      56 1.632632e+06  0.02\n45:      62 1.925560e+06  0.02\n46:      69 2.560533e+06  0.02\n47:      60 3.253739e+06  0.03\n48:      64 3.552718e+06  0.03\n49:      82 2.713851e+06  0.03\n50:      83 4.631210e+06  0.04\n51:      09 5.409774e+06  0.05\n52:      61 5.552442e+06  0.05\n53:      79 5.165851e+06  0.05\n54:      91 4.867880e+06  0.05\n55:      53 6.249523e+06  0.06\n56:      78 6.587412e+06  0.06\n57:      98 6.757452e+06  0.06\n58:      12 7.721081e+06  0.07\n59:      34 7.790692e+06  0.07\n60:      55 7.759872e+06  0.07\n61:      32 9.054527e+06  0.08\n62:      22 9.725604e+06  0.09\n63:      68 9.890219e+06  0.09\n64:      70 1.046068e+07  0.10\n65:      23 1.157155e+07  0.11\n66:      44 1.207241e+07  0.11\n67:      52 1.257919e+07  0.12\n68:      74 1.295066e+07  0.12\n69:      94 1.423236e+07  0.13\n70:      63 1.505935e+07  0.14\n71:      87 1.519237e+07  0.14\n72:      10 2.502074e+07  0.23\n73:      54 2.995820e+07  0.28\n74:      17 3.151585e+07  0.30\n75:      71 3.176260e+07  0.30\n76:      73 3.162889e+07  0.30\n77:      76 3.173169e+07  0.30\n78:      95 3.315395e+07  0.31\n79:      38 3.866092e+07  0.36\n80:      08 3.951892e+07  0.37\n81:      84 4.985482e+07  0.47\n82:      48 5.381667e+07  0.50\n83:      40 5.439581e+07  0.51\n84:      07 8.342665e+07  0.78\n85:      90 8.414214e+07  0.79\n86:      47 1.116978e+08  1.05\n87:      39 1.328582e+08  1.25\n88:      26 1.414729e+08  1.33\n89:      96 1.429565e+08  1.34\n90:      28 2.323163e+08  2.18\n91:      29 2.318574e+08  2.18\n92:      15 2.568370e+08  2.41\n93:      59 2.912324e+08  2.73\n94:      72 3.184954e+08  2.99\n95:      31 3.751674e+08  3.52\n96:      25 7.684029e+08  7.21\n97:      27 2.514609e+09 23.60\n98:      85 4.271295e+09 40.08\n    HSCode2          Qty Share\n\n\nCode\n## Net Trade Tarde Balance\nmerge(exportqty, importqty, by = \"Year\")-&gt;trade\nmerge(trade, exportusd, by = \"Year\")-&gt;trade\nmerge(trade, importusd, by = \"Year\")-&gt;trade\n\ntrade[, Trade_Balance := (Export_USD - Import_USD)]\n\n\n\nTrade Statistics\n\n\nCode\nggplot(trade, aes(x = Year, y = Export_USD, group = 1)) +\n    geom_line(linewidth = 1) +\n    my_theme +\n    scale_y_continuous(labels = scales::comma) +\n    labs(y = \"US $ Million\") +\n    ggtitle(\"Net Exports By India\")-&gt;p1\np1\n\n\n\n\n\n\n\n\n\nCode\nggplot(trade, aes(x = Year, y = Import_USD, group = 1)) +\n    geom_line(linewidth = 1) +\n    my_theme +\n    scale_y_continuous(labels = scales::comma) +\n    labs(y = \"US $ Million\") +\n    ggtitle(\"Net Imports By India\")-&gt;p2\np2\n\n\n\n\n\n\n\n\n\nCode\ngrid.arrange(p1, p2)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Trade Balance\nggplot(trade, aes(x = Year, y = Trade_Balance, group = 1)) +\n    geom_line(linewidth = 1) +\n    my_theme +\n    scale_y_continuous(labels = scales::comma) +\n    labs(y = \"US $ Million\") +\n    ggtitle(\"Trade Balance\")\n\n\n\n\n\n\n\n\n\n\n\nCereals Export\n\n\nCode\nqty[HSCode2 == \"10\"]-&gt;t0\nifelse(t0$HSCode4 == \"1006\", \"Rice\",\nifelse(t0$HSCode4 == \"1001\", \"Wheat\",\nifelse(t0$HSCode4 == \"1005\", \"Maize\", \"Other Ceraeals\")))-&gt;t0$Commodity4\nt0[,.(Qty = sum(Export)),.(Year, Commodity4)]-&gt;t0\n\nfactor(t0$Commodity4, levels = c(\"Other Ceraeals\", \"Maize\",\n                                    \"Wheat\", \"Rice\"))-&gt;t0$Commodity4\nggplot(t0, aes(x = Year, y = Qty)) +\n    geom_bar(aes(fill = Commodity4), stat = \"identity\") +\n    my_theme +\n    scale_fill_brewer(palette = \"Set1\") +\n    scale_y_continuous(labels = scales::comma) +\n    labs(y = \"Quantity (Thousands Tonns)\") +\n    ggtitle(\"Cereals Exports\")\n\n\n\n\n\n\n\n\n\n\n\nFertilizer Import\n\n\nCode\nmqty[HSCode2 == \"31\"]-&gt;f\nifelse(f$HSCode4 == \"3102\", \"Nitrogenous Fertilizer\",\nifelse(f$HSCode4 == \"3104\", \"Potassic Fertilizer\",\nifelse(f$HSCode4 == \"3105\", \"DAP and NPK\", \"Other Chemical Fertilizer\")))-&gt;f$Commodity4\nf[,.(Qty = sum(Import)),.(Year, Commodity4)]-&gt;f\nggplot(f, aes(x = Year, y = Qty)) +\n    geom_bar(aes(fill = Commodity4), stat = \"identity\") +\n    scale_fill_viridis(discrete = T, option = \"E\") +\n    theme_ipsum() +\n    my_theme +\n    scale_y_continuous(labels = scales::comma) +\n    labs(y = \"Quantity (Thousands Tonns)\") +\n    ggtitle(\"Fertilizer Imports\")\n\n\n\n\n\n\n\n\n\n\n\nFats and Oil Import\n\n\nCode\nmqty[HSCode2 == \"15\"]-&gt;h1\nh1[,.(Qty = sum(Import)),.(Year)]-&gt;h1\nggplot(h1, aes(x = Year, y = Qty, group = 1)) +\n    geom_line(linewidth = 1) +\n    my_theme +\n    scale_fill_brewer(palette = \"Set2\") +\n    scale_y_continuous(labels = scales::comma) +\n    labs(y = \"Quantity (Thousands Tonns)\") +\n    ggtitle(\"Vegetable Fats and Edible Oils Imports\")\n\n\n\n\n\n\n\n\n\n\n\nPetrolium Import\n\n\nCode\nmqty[HSCode2 == \"27\"]-&gt;h2\nifelse(h2$HSCode4 == \"2701\", \"Coal\",\nifelse(h2$HSCode4 == \"2709\", \"Petrolium Oils\",\nifelse(h2$HSCode4 == \"2711\", \"Petrolium Gases\", \"Other Petrolium\")))-&gt;h2$Commodity4\nh2[,.(Qty = sum(Import)),.(Year, Commodity4)]-&gt;h2\nggplot(h2, aes(x = Year, y = Qty)) +\n    geom_bar(aes(fill = Commodity4), stat = \"identity\") +\n    my_theme +\n    scale_fill_brewer(palette = \"Set2\") +\n    scale_y_continuous(labels = scales::comma) +\n    labs(y = \"Quantity (Thousands Tonns)\") +\n    ggtitle(\"Petrolium Imports\")"
  },
  {
    "objectID": "data_vizs/procurement.html",
    "href": "data_vizs/procurement.html",
    "title": "Public Procurement",
    "section": "",
    "text": "Whatever foodgrains are produced and offered, i.e. wheat, paddy, coarse grains, by the farmers, within the stipulated procurement period are purchased by the State Government Agencies including the Food Corporation of India (FCI) at Minimum Support price (MSP).\nThe government procures foodgrains in order to ensure farmers receive the minimum support price (MSP) and a stock is maintained to distribute to the poor under the Public Distribution System (PDS) and other schemes and also to ensure the country’s food security.\nBefore the harvest during each Crop season, the Government of India announces the Minimum Support Price (MSP) for procurement.\nCode\nlibrary(data.table)\nlibrary(ggplot2)\n\nfread(\"/home/pawan/procurement/procurement.csv\")-&gt;t1\nt1[,.(Total=sum(Total),FCI=sum(FCI),\n      StateAgency=sum(StateAgency)),.(Crop,MarketingSeason)]-&gt;t1\n\nggplot(t1,aes(x=MarketingSeason,y=Total,fill=Crop))-&gt;p\np+geom_bar(stat=\"identity\")+facet_wrap(~Crop)-&gt;p\np+theme_bw(base_size=15)-&gt;p\np+theme(legend.position=\"none\",\n        axis.text.x=element_text(angle=90,vjust=0.5))-&gt;p\np+labs(y=\"Qty (in LMT)\")"
  },
  {
    "objectID": "data_vizs/procurement.html#paddy-procurement",
    "href": "data_vizs/procurement.html#paddy-procurement",
    "title": "Public Procurement",
    "section": "Paddy Procurement",
    "text": "Paddy Procurement\n\nPaddy procurement marketing season in India begins each year on 1st October and ends on 30th September the following year.\nThe figure gives the month-wise weekly paddy procurement in India for about 3.5 years from 2018 to 2022.\nOverall paddy procurement has been increasing over the last 3 years.\nThere was a fall in procurement in Oct-Dec (2021-22) over the same period in the previous year.\nPaddy procurement however picked up subsequently and was higher in Jan-Mar (2021-22) over the corresponding period in 2020-21.\nThe decline in procurement in Oct-Dec (2021-22) is mainly because of the decline in paddy procurement in Haryana and Punjab.\nAnd the recovery in procurement starting in January end 2022 is due to a large increase in paddy procurement in Chhattisgarh and Madhya Pradesh.\nThe paddy procurement in Haryana in this season is much less as compared to the previous seasons"
  },
  {
    "objectID": "data_vizs/stocks.html",
    "href": "data_vizs/stocks.html",
    "title": "Foodgrain Stock",
    "section": "",
    "text": "Total foodgrain stocks peaked at 100.5 lakh tonnes (Feb 2025), driven by unmilled paddy (50.1 lakh tonnes).\nWheat stocks fluctuated significantly, dropping to 7.5 lakh tonnes (Apr 2024) and rising to 34 lakh tonnes (Feb 2025).\nRice stocks steadily increased from 21.1 lakh tonnes (Mar 2023) to 34 lakh tonnes (Feb 2025)."
  },
  {
    "objectID": "data_vizs/fuelprice.html#international-fuel-price",
    "href": "data_vizs/fuelprice.html#international-fuel-price",
    "title": "Fuel Prices",
    "section": "International Fuel Price",
    "text": "International Fuel Price\nRead the data\n\n\nCode\nas.data.table(read_excel(\"/home/pawan/fuelprices/international_price_indian_basket.xlsx\",\n                         sheet = \"crude-oil\"))-&gt;crude\n\nmelt(crude, id = c(\"Year\", \"Average\", \"Ratio\"))-&gt;crude\nas.numeric(match(substr(crude$variable, 1, 3), month.abb))-&gt;crude$variable\nas.numeric(ifelse(crude$variable&gt;3, substr(crude$Year, 1, 4),\n                  paste0(20,substr(crude$Year, 6, 7))))-&gt;crude$Year\n\nas.Date(paste0(crude$Year, \"-\", crude$variable, \"-\", 20))-&gt;crude$Date\ncrude[,.(Price = mean(value)),.(Year)]-&gt;avgcrude\n\n## Diesel Internationl Price\n\nas.data.table(read_excel(\"/home/pawan/fuelprices/international_price_indian_basket.xlsx\",\n                         sheet = \"diesel\"))-&gt;diesel\n\nmelt(diesel, id = c(\"Year\", \"Average\"))-&gt;diesel\nas.numeric(match(substr(diesel$variable, 1, 3), month.abb))-&gt;diesel$variable\nas.numeric(ifelse(diesel$variable&gt;3, substr(diesel$Year, 1, 4),\n                  paste0(20, substr(diesel$Year, 6, 7))))-&gt;diesel$Year\n\nas.Date(paste0(diesel$Year, \"-\", diesel$variable, \"-\", 20))-&gt;diesel$Date\npaste(\"Diesel\")-&gt;diesel$Fuel\n\n## Pertol International Price\nas.data.table(read_excel(\"/home/pawan/fuelprices/international_price_indian_basket.xlsx\",\n                         sheet = \"petrol\"))-&gt;petrol\n\nmelt(petrol, id = c(\"Year\", \"Average\"))-&gt;petrol\nas.numeric(match(substr(petrol$variable, 1, 3), month.abb))-&gt;petrol$variable\nas.numeric(ifelse(petrol$variable&gt;3, substr(petrol$Year, 1, 4),\n                  paste0(20,substr(petrol$Year, 6, 7))))-&gt;petrol$Year\n\nas.Date(paste0(petrol$Year, \"-\", petrol$variable, \"-\", 20))-&gt;petrol$Date\npaste(\"Petrol\")-&gt;petrol$Fuel\n\n## Merge Diesel and Petrol\nrbind(diesel, petrol)-&gt;fuel\n\n\nVisualizations\nAverage Crude Oil FOB Price (Indian Basket)\n\n\nCode\nggplot(avgcrude, aes(x = Year, y = Price, group = 1)) +\n    geom_line() +\n    my_theme +\n    labs(y = \"Price (Dollars per Barrel)\") +\n    ggtitle(\"Average Crude Oil FOB Price (Indian Basket)\")\n\n\n\n\n\n\n\n\n\nCrude Oil FOB Price (Indian Basket)\n\n\nCode\nggplot(crude, aes(x = Date, y = value, group = 1)) +\n    geom_line() +\n    my_theme +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Dollars per Barrel)\") +\n    ggtitle(\"Crude Oil FOB Price (Indian Basket)\")\n\n\n\n\n\n\n\n\n\nDiesel FOB International Price\n\n\nCode\nggplot(diesel, aes(x = Date, y = value, group = 1)) +\n    geom_line() +\n    my_theme +\n    scale_x_date(date_labels = \"%Y-%b\", date_breaks = \"3 months\") +\n    labs(y = \"Price (Dollars per Barrel)\") +\n    ggtitle(\"Diesel FOB International Price\")-&gt;p1\np1\n\n\n\n\n\n\n\n\n\nPetrol FOB International Price\n\n\nCode\nggplot(petrol, aes(x = Date, y = value, group = 1)) +\n    geom_line() +\n    my_theme +\n    scale_x_date(date_labels = \"%Y-%b\", date_breaks = \"3 months\") +\n    labs(y = \"Price (Dollars per Barrel)\") +\n    ggtitle(\"Petrol FOB International Price\")-&gt;p2\np2\n\n\n\n\n\n\n\n\n\n\n\nCode\ngrid.arrange(p1, p2)\n\n\n\n\n\n\n\n\n\nDisesl and Petrol FOB International Price\n\n\nCode\nggplot(fuel, aes(x = Date, y = value, group = 1)) +\n    geom_line() +\n    my_theme + facet_wrap(~Fuel) +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Dollars per Barrel)\") +\n    ggtitle(\"Disesl and Petrol FOB International Price\")-&gt;p\np\n\n\n\n\n\n\n\n\n\nImport of Crude oil and Petroleum Products\n\n\nCode\nas.data.table(read_excel(\"/home/pawan/fuelprices/IMPORT_EXPORT.xlsx\",\n                         sheet = \"PT_IMPORT_H\"))-&gt;t\nmelt(t, id = \"IMPORT_EXPORT\")-&gt;t\n\nt[IMPORT_EXPORT %in% c(\"CRUDE OIL\", \"TOTAL PRODUCT IMPORT\")]-&gt;imp\n\nggplot(imp, aes(x = variable, y = value, fill = IMPORT_EXPORT)) +\n    geom_bar(stat = \"identity\", position = \"stack\") +\n    my_theme +\n    scale_fill_brewer(palette = \"Set2\") +\n    scale_y_continuous(labels = scales::comma) +\n    labs(x = \"Year\",\n         y = \"Qty (000 Metric Tonnes)\") +\n    ggtitle(\"Import of Crude oil and Petroleum Products\")\n\n\n\n\n\n\n\n\n\nCode\n##ggsave(\"import-crude-and-petroleum.png\", width = 15, height = 8)\n\n\nCrude Oil Price\n\n\nCode\nfread(\"/home/pawan/fuelprices/eia-oil-prices.csv\")-&gt;t\nas.Date(t$Date,\"%Y-%b-%d\")-&gt;t$Date\n\nggplot(t, aes(x = Date, y = RBRTE, group = 1)) +\n    geom_line() +\n    my_theme +\n    labs(y = \"Price (Dollars per Barrel)\") +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")-&gt;p\np"
  },
  {
    "objectID": "data_vizs/fuelprice.html#fuel-price-in-metro-cities-of-india",
    "href": "data_vizs/fuelprice.html#fuel-price-in-metro-cities-of-india",
    "title": "Fuel Prices",
    "section": "Fuel Price in Metro Cities of India",
    "text": "Fuel Price in Metro Cities of India\nLoad Data\n\n\nCode\nfread(\"/home/pawan/fuelprices/india_retail_fuelprices.csv\")-&gt;t\nas.Date(t$Date, format = \"%d/%m/%y\")-&gt;t$Date\n\nmelt(t, id = c(\"Date\", \"Fuel\"))-&gt;t1\n\nt[Fuel == \"Petrol\"]-&gt;petrol\nt[Fuel == \"Diesel\"]-&gt;diesel\n\nmelt(petrol, id = c(\"Date\", \"Fuel\"))-&gt;petrol\npetrol[order(Date)]-&gt;petrol\ntail(petrol, n = 4)-&gt;petrol1\n\nmelt(diesel, id = c(\"Date\", \"Fuel\"))-&gt;diesel\ndiesel[order(Date)]-&gt;diesel\ntail(diesel, n = 4)-&gt;diesel1\n\n\n\n\nCode\nggplot(t1, aes(x = Date, y = value, color = Fuel)) +\n    geom_line(linewidth = 0.6) +\n    facet_wrap(~variable) +\n    my_theme +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Rs./Litre)\") +\n    ggtitle(\"Fuel Price in Metro City\")-&gt;p\n\np\n\n\n\n\n\n\n\n\n\nPetrol Price\n\n\nCode\n## Petrol Price\nggplot(petrol, aes(x = Date, y = value, group = 1)) +\n    geom_line(linewidth = 1.5) +\n    facet_wrap(~variable) +\n    geom_text(data = petrol1, aes(x = Date, y = value,\n                                  label = sprintf(\"%0.2f\", value)),\n              color = \"red\",\n              vjust = -0.4,\n              hjust = 0.9,\n              size = 3*4) +\n    my_theme +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Rs./Litre)\") +\n    ggtitle(\"Pertol Price\")-&gt;p1\np1\n\n\n\n\n\n\n\n\n\nDiesel Price\n\n\nCode\n## Diesel Price\nggplot(diesel, aes(x = Date, y = value, group = 1)) +\n    geom_line(size = 1.5) +\n    facet_wrap(~variable) +\n    geom_text(data = diesel1, aes(x = Date, y = value,\n                                  label = sprintf(\"%0.2f\", value)),\n              color = \"red\",\n              vjust = -0.4,\n              hjust = 1,\n              size = 3*4) +\n    my_theme +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Rs./Litre)\") +\n    ggtitle(\"Diesel Price\")-&gt;p2\np2\n\n\n\n\n\n\n\n\n\n\n\nCode\ncowplot::plot_grid(p1,\n                   p2 + theme(axis.text.y = element_blank(),\n                              axis.ticks.y = element_blank(),\n                              axis.title.y = element_blank()))\n\n\n\n\n\n\n\n\n\nCode\n## ggsave(\"fuel-price.png\", width = 15, height = 8)\n\n\nDaily Fuel Price in different City\n\n\nCode\n## Delhi Petrol Diesel Daily Price\nggplot(t, aes(x = Date, y =Delhi, group = 1)) +\n    geom_line(size = 0.8) +\n    facet_wrap(~Fuel) +\n    my_theme +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Rs./Litre)\")-&gt;p\np\n\n\n\n\n\n\n\n\n\nCode\n## Mumbai Petrol Diesel Daily Price\nggplot(t, aes(x = Date, y = Mumbai, group = 1)) +\n    geom_line(size = 0.8) +\n    facet_wrap(~Fuel) +\n    my_theme +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Rs./Litre)\")-&gt;p\n\np\n\n\n\n\n\n\n\n\n\nCode\n## Chennai Petrol Diesel Daily Price\nggplot(t, aes(x = Date, y = Chennai, group = 1)) +\n    geom_line(size = 0.8) +\n    facet_wrap(~Fuel) +\n    my_theme +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Rs./Litre)\")-&gt;p\np\n\n\n\n\n\n\n\n\n\nCode\n## Kolkata Petrol Diesel Daily Price\nggplot(t, aes(x = Date, y = Kolkata, group = 1)) +\n    geom_line(size = 0.8) +\n    facet_wrap(~Fuel) +\n    my_theme +\n    scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\") +\n    labs(y = \"Price (Rs./Litre)\")-&gt;p\np"
  },
  {
    "objectID": "data_vizs/stocks.html#key-points",
    "href": "data_vizs/stocks.html#key-points",
    "title": "Foodgrain Stock",
    "section": "",
    "text": "Total foodgrain stocks peaked at 100.5 lakh tonnes (Feb 2025), driven by unmilled paddy (50.1 lakh tonnes).\nWheat stocks fluctuated significantly, dropping to 7.5 lakh tonnes (Apr 2024) and rising to 34 lakh tonnes (Feb 2025).\nRice stocks steadily increased from 21.1 lakh tonnes (Mar 2023) to 34 lakh tonnes (Feb 2025)."
  },
  {
    "objectID": "data_vizs/stocks.html#lets-visualized-the-data",
    "href": "data_vizs/stocks.html#lets-visualized-the-data",
    "title": "Foodgrain Stock",
    "section": "Let’s visualized the data",
    "text": "Let’s visualized the data\nLoad necessary packages\n\n\nCode\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(tidyr)\nlibrary(scales)\nlibrary(ggforce)\nlibrary(gt)\n\n\nRead the data and cleaning\n\n\nCode\nfread(\"~/stocks/stocksall.csv\", sep = \",\", header = T)-&gt;stocksall\nunique(stocksall)-&gt;stocksall\nfread(\"~/stocks/pdsold.csv\", sep = \",\", header = T)-&gt;oldstocks\noldstocks[,coarsegrains := stocks_total-stocks_rice-stocks_wheat]\nmelt(stocksall,id = c(\"Year\", \"Commodity\"))-&gt;t\nas.Date(paste(01, t$variable, t$Year, sep = \"-\"), \"%d-%b-%Y\")-&gt;t$Date\nfactor(t$Commodity, levels = c(\"Rice\", \"Wheat\",\n                               \"Unmilled Paddy\",\n                               \"Coarsegrain\", \"Total\"))-&gt;t$Commodity\nseparate(oldstocks, col = Year, sep = \"-\", into = c(\"v1\", \"year\"))-&gt;oldstocks\nas.Date(paste(\"01\", \"04\", oldstocks$year, sep = \"-\"), \"%d-%m-%y\")-&gt;oldstocks$Date\nsetDT(oldstocks)\noldstocks[Date&lt;as.Date(\"01-01-2003\", format=\"%d-%m-%Y\")\n         ,.(Date, Rice = stocks_rice, Wheat = stocks_wheat,\n            Coarsegrain = coarsegrains)]-&gt;oldstocks\nmelt(oldstocks, id = \"Date\")-&gt;t1\nt1$value * 10-&gt;t1$value\nnames(t1)[names(t1) == \"variable\"]&lt;-\"Commodity\"\nt[Commodity != \"Total\",.(Date, Commodity, value)]-&gt;t\nt[!is.na(value)]-&gt;t\nt1[!is.na(value)]-&gt;t1\nrbind(t, t1)-&gt;t1\nas.numeric(t1$value)/10-&gt;t1$value\nt1[!is.na(value)]-&gt;t1\nt1[,.(Commodity, value = cumsum(value)),.(Date)]-&gt;t1\nfactor(t1$Commodity, levels = rev(c(\"Rice\", \"Wheat\",\n                                    \"Unmilled Paddy\",\n                                    \"Coarsegrain\")))-&gt;t1$Commodity\nt1[order(Commodity, Date)]-&gt;t1\n\n\nCustom theme for plots\n\n\nCode\nmy_theme &lt;- theme_bw(base_size = 16) +  ## Start with theme_bw and increase base size\n    theme(text = element_text(family = \"serif\", color = \"#333333\"), ## Set font family and color\n          plot.title = element_text(size = 20, face = \"bold\",\n                                    hjust = 0.5, margin = margin(10, 0, 10, 0)), ## Center and style title\n          axis.title = element_text(size = 18),\n          axis.text = element_text(size = 14),\n          legend.position = \"bottom\",\n          legend.title = element_blank(),  ## Remove legend title\n          panel.grid.major = element_line(color = \"#EEEEEE\"), ## Lighter grid lines\n          panel.border = element_blank(), ## Remove panel border\n          axis.line = element_line(color = \"#333333\"), ## Add axis lines\n          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n          strip.background = element_rect(fill = \"#F2F2F2\", color = NA) ## Style facet strips (if used)\n          )\n\n\nVisualization\n\n\nCode\nggplot(t1, aes(x = Date, ymax = value, ymin = 0)) +\n    geom_ribbon(aes(fill = Commodity)) +\n    scale_y_continuous(\"Million tonnes\") +\n    scale_x_date(date_breaks = \"1 year\",\n                 date_labels = \"%Y\") +\n    my_theme +\n    ggtitle(paste0(\"Foodgrain Stocks\",\n                   \" \", \"1972\", \"-\", max(year(t1$Date)))) +\n    facet_zoom(xlim = c(as.Date(\"2018-01-01\"), as.Date(max(t1$Date))))-&gt;p\np\n\n\n\n\n\n\n\n\n\nTable of Last 24 Months Foodgrain Stocks\n\n\nCode\nmelt(stocksall, id = c(\"Year\", \"Commodity\"))-&gt;t\npaste(01, t$variable, t$Year, sep = \"-\")-&gt;t$Date\nas.Date(t$Date, \"%d-%b-%Y\")-&gt;t$Date\nt[!is.na(value)]-&gt;t\nas.numeric(t$value)/10-&gt;t$value\nfactor(t$Commodity, levels = c(\"Wheat\", \"Rice\",\n                               \"Unmilled Paddy\",\n                               \"Coarsegrain\", \"Total\"))-&gt;t$Commodity\nt[Commodity != \"Total\",.(value, Commodity, Date)]-&gt;t\nt[,.(value = sum(value),\n     Commodity = \"Total\"), Date]-&gt;t1\nrbind(t, t1)-&gt;t\nt[,value := round(value, 1)]\ndcast(t, Date~Commodity, sum)-&gt;t\nformat(t$Date, \"%b-%Y\")-&gt;t$Date\ngt(tail(t, n = 24))\n\n\n\n\n\n\n\n\nDate\nWheat\nRice\nUnmilled Paddy\nCoarsegrain\nTotal\n\n\n\n\nApr-2023\n8.3\n24.9\n27.6\n0.4\n61.3\n\n\nMay-2023\n29.0\n26.5\n22.7\n0.5\n78.7\n\n\nJun-2023\n31.4\n26.2\n22.7\n0.4\n80.7\n\n\nJul-2023\n30.1\n25.3\n23.3\n0.4\n79.2\n\n\nAug-2023\n28.0\n24.3\n19.6\n0.4\n72.3\n\n\nSep-2023\n26.0\n23.3\n16.1\n0.3\n65.7\n\n\nOct-2023\n24.0\n22.2\n13.8\n0.2\n60.3\n\n\nNov-2023\n21.9\n20.0\n26.3\n0.2\n68.4\n\n\nDec-2023\n19.2\n18.4\n37.6\n0.2\n75.4\n\n\nJan-2024\n16.4\n18.2\n50.0\n0.2\n84.7\n\n\nFeb-2024\n13.3\n21.0\n54.7\n0.4\n89.4\n\n\nMar-2024\n9.7\n26.3\n47.3\n0.4\n83.7\n\n\nApr-2024\n7.5\n30.2\n34.3\n0.4\n72.4\n\n\nMay-2024\n26.0\n31.9\n28.3\n0.5\n86.7\n\n\nJun-2024\n29.9\n32.5\n26.8\n0.4\n89.6\n\n\nJul-2024\n28.3\n32.6\n23.7\n0.6\n85.2\n\n\nAug-2024\n26.8\n32.8\n19.0\n0.6\n79.2\n\n\nSep-2024\n25.1\n32.3\n14.8\n0.4\n72.6\n\n\nOct-2024\n23.8\n31.1\n11.4\n0.2\n66.4\n\n\nNov-2024\n22.3\n29.7\n21.5\n0.3\n73.7\n\n\nDec-2024\n20.6\n28.0\n35.1\n0.2\n84.0\n\n\nJan-2025\n18.4\n29.1\n47.6\n0.2\n95.3\n\n\nFeb-2025\n16.2\n34.0\n50.1\n0.2\n100.5\n\n\nMar-2025\n16.2\n34.0\n50.1\n0.2\n100.5"
  }
]